{"version":3,"sources":["components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/common/like.jsx","services/logService.js","services/httpService.js","services/authService.js","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","services/movieService.js","services/genreService.js","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/rentals.jsx","components/notFound.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/navBar.jsx","components/loginForm.jsx","components/logout.jsx","services/usersService.js","components/registerForm.jsx","components/common/protectedRoute.jsx","App.js","serviceWorker.js","index.js"],"names":["TableHeader","raiseSort","path","sortColumn","props","order","onSort","renderSortIcon","column","className","aria-hidden","columns","this","map","key","onClick","label","Component","TableBody","renderCell","item","content","_","get","createKey","_id","data","Table","Like","onLike","classes","liked","style","cursor","init","Sentry","dsn","log","error","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","tokenKey","email","password","a","http","localStorage","setItem","getJwt","getItem","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","MoviesTable","movie","Link","to","title","deleteColumn","onDelete","user","auth","isAdmin","push","movies","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","selectedItem","onItemSelect","name","getMovie","movieId","saveMovie","body","getGenres","SearchBox","value","onChange","type","placeholder","e","currentTarget","Movies","state","genres","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","handleLike","index","indexOf","handlePageChange","handleGenreSelect","genre","handleSort","handleSearch","query","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","Fragment","length","Customers","Rentals","NotFound","Input","rest","htmlFor","id","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","details","message","valideProperty","obj","handleChange","input","errorMessage","handleSubmit","preventDefault","doSubmit","renderButton","disabled","renderInput","renderSelect","MovieForm","genreId","numberInStock","dailyRentalRate","string","required","number","min","max","mapToViewModel","history","match","params","replace","populateGenres","populateMovies","onSubmit","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","LoginForm","username","location","window","from","pathname","Redirect","Logout","Register","ProtectedRoute","component","render","Route","App","Switch","exact","Boolean","hostname","console","REACT_APP_NAME","ReactDOM","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9459d50.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    if (!path) return null;\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (sortColumn.path !== column.path) return null;\r\n    if (sortColumn.order === \"asc\")\r\n      return <i className=\"fa fa-sort-asc\" aria-hidden=\"true\"></i>;\r\n    return <i className=\"fa fa-sort-desc\" aria-hidden=\"true\"></i>;\r\n  };\r\n\r\n  render() {\r\n    const { columns } = this.props;\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {columns.map(column => (\r\n            <th\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = ({ onLike, liked }) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i onClick={onLike} style={{ cursor: \"pointer\" }} className={classes}></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import * as Sentry from \"@sentry/browser\";\r\n\r\nfunction init() {\r\n  Sentry.init({\r\n    dsn: \"https://dfed423ba4934358ad34f306157c8197@sentry.io/1861934\"\r\n  });\r\n}\r\n\r\nfunction log(error) {\r\n  Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error(\"Something went wrong!\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport function setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like onLike={() => this.props.onLike(movie)} liked={movie.liked} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        className=\"btn btn-danger btn-sm\"\r\n        onClick={() => this.props.onDelete(movie)}\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) this.columns.push(this.deleteColumn);\r\n  }\r\n\r\n  render() {\r\n    const { movies, sortColumn, onSort } = this.props;\r\n\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\r\n          >\r\n            <span className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({ items, selectedItem, onItemSelect }) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          key={item._id}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n          onClick={() => onItemSelect(item)}\r\n        >\r\n          {item.name}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ListGroup;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(apiEndPoint + \"/\" + movieId);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(apiEndPoint + \"/\" + movieId);\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(apiEndPoint + \"/\" + movie._id, body);\r\n  }\r\n\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/genres\";\r\n\r\nexport function getGenres() {\r\n  return http.get(apiEndPoint);\r\n}\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"searchQuery\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search ...\"\r\n        value={value}\r\n        onChange={e => onChange(e.currentTarget.value)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport { getMovies, deleteMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBox from \"./common/searchBox\";\r\nimport _ from \"lodash\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n    searchQuery: \"\",\r\n    currentPage: 1,\r\n    selectedGenre: null,\r\n    pageSize: 4\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n    const genres = [{ _id: \"\", name: \"All\" }, ...data];\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = this.state.movies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      await deleteMovie(movie._id);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        toast.error(\"This movie is already deleted\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGenreSelect = genre => {\r\n    this.setState({ selectedGenre: genre, currentPage: 1, searchQuery: \"\" });\r\n  };\r\n\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n\r\n  handleSearch = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      selectedGenre: null,\r\n      currentPage: 1\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      movies: allMovies,\r\n      currentPage,\r\n      pageSize,\r\n      genres,\r\n      sortColumn,\r\n      searchQuery,\r\n      selectedGenre\r\n    } = this.state;\r\n\r\n    const { user } = this.props;\r\n\r\n    let filtered = allMovies;\r\n\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-3\">\r\n            <ListGroup\r\n              items={genres}\r\n              selectedItem={selectedGenre}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-sm-9\">\r\n            {user && (\r\n              <Link to=\"/movies/new\" className=\"btn btn-primary mb-3\">\r\n                New Movie\r\n              </Link>\r\n            )}\r\n            <p>Showing {filtered.length} movies </p>\r\n\r\n            <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n\r\n            <MoviesTable\r\n              movies={movies}\r\n              sortColumn={sortColumn}\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              onSort={this.handleSort}\r\n            />\r\n\r\n            <Pagination\r\n              itemsCount={filtered.length}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ label, name, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ label, name, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select {...rest} name={name} id={name} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\nimport Joi from \"joi-browser\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    data: {},\r\n    errors: {}\r\n  };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n\r\n    if (!error) return null;\r\n\r\n    const errors = {};\r\n    for (let item of error.details) {\r\n      errors[item.path[0]] = item.message;\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  valideProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.valideProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button className=\"btn btn-primary\" disabled={this.validate()}>\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        name={name}\r\n        label={label}\r\n        type={type}\r\n        value={data[name]}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Select\r\n        name={name}\r\n        label={label}\r\n        value={data[name]}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport { getMovie, saveMovie } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport Form from \"./common/form\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: { title: \"\", genreId: \"\", numberInStock: \"\", dailyRentalRate: \"\" },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(10)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovies() {\r\n    const movieId = this.props.match.params.id;\r\n    if (movieId === \"new\") return;\r\n    try {\r\n      const { data: movie } = await getMovie(movieId);\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovies();\r\n  }\r\n\r\n  mapToViewModel = movie => {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\", \"number\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n\r\n// const MovieForm = ({ match, history }) => {\r\n//   return (\r\n//     <div>\r\n//       <h1>Movie ID: {match.params.id}</h1>\r\n//       <button\r\n//         className=\"btn btn-primary\"\r\n//         onClick={() => history.push(\"/movies\")}\r\n//       >\r\n//         Save\r\n//       </button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default MovieForm;\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light mb-4\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        Vidly\r\n      </Link>\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <div className=\"navbar-nav\">\r\n          <NavLink className=\"nav-link nav-item\" to=\"/movies\">\r\n            Movies\r\n          </NavLink>\r\n          <NavLink className=\"nav-link nav-item\" to=\"/customers\">\r\n            Customers\r\n          </NavLink>\r\n          <NavLink className=\"nav-link nav-item\" to=\"/rentals\">\r\n            Rentals\r\n          </NavLink>\r\n          {!user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link nav-item\" to=\"/login\">\r\n                Login\r\n              </NavLink>\r\n              <NavLink className=\"nav-link nav-item\" to=\"/register\">\r\n                Register\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n          {user && (\r\n            <React.Fragment>\r\n              <NavLink className=\"nav-link nav-item\" to=\"/profile\">\r\n                {user.name}\r\n              </NavLink>\r\n              <NavLink className=\"nav-link nav-item\" to=\"/logout\">\r\n                Logout\r\n              </NavLink>\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { data } = this.state;\r\n      await auth.login(data.username, data.password);\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport * as userService from \"../services/usersService\";\r\nimport auth from \"../services/authService\";\r\nimport Form from \"./common/form\";\r\n\r\nclass Register extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: \"/login\",\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notFound\";\nimport MovieForm from \"./components/movieForm\";\nimport NavBar from \"./components/navBar\";\nimport LoginForm from \"./components/loginForm\";\nimport Logout from \"./components/logout\";\nimport Register from \"./components/registerForm\";\nimport ProtectedRoute from \"./components/common/protectedRoute\";\nimport auth from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <NavBar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <Route path=\"/register\" component={Register} />\n            <ProtectedRoute path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nconsole.log(\"Superman\", process.env.REACT_APP_NAME);\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n// ReactDOM.render(<Counter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}